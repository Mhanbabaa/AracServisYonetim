@model AracServisYonetim.Models.Servis
@{
    ViewBag.Title = "Yeni Servis Kaydı";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="modal-header">
    <h2>@ViewBag.Title</h2>
    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
</div>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="modal-body">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group mb-3">
            @Html.LabelFor(model => model.AracId, "Araç", new { @class = "control-label" })
            @Html.DropDownList("AracId", null, "Araç seçin", new { @class = "form-select" })
            @Html.ValidationMessageFor(model => model.AracId, "", new { @class = "text-danger" })
        </div>

        <div class="form-group mb-3">
            @Html.LabelFor(model => model.Aciklama, new { @class = "control-label" })
            @Html.TextAreaFor(model => model.Aciklama, new { @class = "form-control", rows = 3 })
            @Html.ValidationMessageFor(model => model.Aciklama, "", new { @class = "text-danger" })
        </div>

        <div class="row mb-3">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.TeknisyenId, "Teknisyen", new { @class = "control-label" })
                    @Html.DropDownList("TeknisyenId", null, "Teknisyen seçin", new { @class = "form-select" })
                    @Html.ValidationMessageFor(model => model.TeknisyenId, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.Durum, new { @class = "control-label" })
                    @Html.DropDownList("Durum", (SelectList)ViewBag.Durumlar, new { @class = "form-select" })
                    @Html.ValidationMessageFor(model => model.Durum, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="row mb-3">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.Kilometre, "Kilometre", new { @class = "control-label" })
                    @Html.EditorFor(model => model.Kilometre, new { htmlAttributes = new { @class = "form-control", type = "number", min = "0" } })
                    @Html.ValidationMessageFor(model => model.Kilometre, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="row mb-3">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.IscilikUcreti, new { @class = "control-label" })
                    @Html.EditorFor(model => model.IscilikUcreti, new { htmlAttributes = new { @class = "form-control", type = "number", min = "0", step = "0.01" } })
                    @Html.ValidationMessageFor(model => model.IscilikUcreti, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.ParcaUcreti, new { @class = "control-label" })
                    @Html.EditorFor(model => model.ParcaUcreti, new { htmlAttributes = new { @class = "form-control", type = "number", min = "0", step = "0.01" } })
                    @Html.ValidationMessageFor(model => model.ParcaUcreti, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group mb-3">
            <label class="control-label">Toplam Ücret</label>
            <div class="input-group">
                <input type="text" id="toplamUcret" class="form-control" readonly />
                <span class="input-group-text">₺</span>
            </div>
        </div>

        <div class="row mb-3">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.BaslangicTarihi, new { @class = "control-label" })
                    @Html.EditorFor(model => model.BaslangicTarihi, new { htmlAttributes = new { @class = "form-control", type = "date" } })
                    @Html.ValidationMessageFor(model => model.BaslangicTarihi, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.BitisTarihi, new { @class = "control-label" })
                    @Html.EditorFor(model => model.BitisTarihi, new { htmlAttributes = new { @class = "form-control", type = "date" } })
                    @Html.ValidationMessageFor(model => model.BitisTarihi, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>

    <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">İptal</button>
        <button type="submit" class="btn btn-primary">Kaydet</button>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $(document).ready(function () {
            // Toplam ücret hesaplama
            function hesaplaToplamUcret() {
                var iscilikUcreti = parseFloat($('#IscilikUcreti').val()) || 0;
                var parcaUcreti = parseFloat($('#ParcaUcreti').val()) || 0;
                var toplamUcret = iscilikUcreti + parcaUcreti;
                $('#toplamUcret').val(toplamUcret.toFixed(2));
            }

            $('#IscilikUcreti, #ParcaUcreti').on('input', function () {
                hesaplaToplamUcret();
            });

            // Sayfa yüklendiğinde toplam ücreti hesapla
            hesaplaToplamUcret();
        });
    </script>
}
